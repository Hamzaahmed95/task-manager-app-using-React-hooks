{"version":3,"sources":["components/dumbComponents/customInputFields/index.js","constants/messages.js","components/smartComponents/input/index.js","components/dumbComponents/login/index.js","components/dumbComponents/modal/index.js","components/dumbComponents/TaskList/index.js","components/smartComponents/SearchTask/index.js","components/dumbComponents/donutchart/index.js","components/dumbComponents/taskDescription/index.js","components/smartComponents/TaskDetails/index.js","components/dumbComponents/noTask/index.js","components/dumbComponents/main/index.js","components/dumbComponents/header/index.js","components/smartComponents/loading/index.js","components/AppComponent.js","constants/apikey.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","border","overflow","borderRadius","backgroundColor","transition","transitions","create","boxShadow","fade","palette","primary","main","borderColor","focused","InputField","props","classes","TextField","type","InputProps","disableUnderline","TOKEN","USERNAME","USERID","IS_COMPLETED","TASKS","TASK","CustomizedInputs","useState","taskName","setTaskName","editTaskName","setEditTaskName","id","setId","username","setUsername","useEffect","isEdit","taskItem","className","align","modal","label","defaultValue","onChange","e","target","value","console","log","handleChangeEditTaskName","variant","Button","onClick","firebase","database","ref","orderByChild","equalTo","once","snapshot","forEach","data","child","set","disabled","handleChangeTaskName","taskObject","userID","localStorage","getItem","task","isCompleted","push","then","resp","handleSubmit","catch","err","handleChangeId","handleChangeUsername","handleUserSubmit","text","minWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","Login","Card","CardContent","Typography","component","errorLoggedIn","style","color","errorMessage","alignItems","justifyContent","paper","background","shadows","padding","spacing","button","width","Fade","React","forwardRef","open","in","children","onEnter","onExited","other","useSpring","from","opacity","to","onStart","onRest","div","Modals","setOpen","handleOpen","startIcon","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","TaskList","checked","setChecked","TableContainer","Paper","Table","aria-label","TableBody","map","TableRow","TableCell","fontWeight","fontFamily","scope","c","clickedCategory","indexOf","all","setCompleteTask","splice","removeTask","SearchTask","paddingTop","paddingBottom","handleChange","DonutChart","size","name","totalTasks","totalTaskCompleted","toFixed","TaskDescription","recentTaskList","keys","TaskDetails","taskList","setTaskList","setRecentTaskList","filterList","setFilterList","setTotalTaskCompleted","setTotalTasks","on","datas","exists","val","limitToLast","inputValue","filter","taskData","toUpperCase","includes","flag","remove","marginTop","NoTask","Main","isTaskAdded","Header","logoutSubmit","LoadingComponent","Loading","isLoading","TaskAdded","setTimeout","CircularProgress","AppComponent","UserLoggedIn","IsUserLoggedIn","IsErrorLoggedIn","setErrorMessage","removeItem","setItem","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","apps","length","app","initializeApp","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2ddf9df.chunk.js","sourcesContent":["import { fade, makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    border: \"1px solid #e2e2e1\",\n    overflow: \"hidden\",\n    borderRadius: 4,\n    backgroundColor: \"#fcfcfb\",\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    \"&:hover\": {\n      backgroundColor: \"#fff\"\n    },\n    \"&$focused\": {\n      backgroundColor: \"#fff\",\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\n      borderColor: theme.palette.primary.main\n    }\n  },\n  focused: {}\n}));\n\nconst InputField = props => {\n  const classes = useStyles();\n\n  return (\n    <TextField\n      type={props.type}\n      InputProps={{ classes, disableUnderline: true }}\n      {...props}\n    />\n  );\n};\nexport default InputField;\n","export const INVALID_USERNAME = \"username is invalid\";\nexport const INVALID_ID = \"id is invalid\";\nexport const TOKEN = \"token\";\nexport const USERNAME = \"username\";\nexport const APIKEY = \"apiKey\";\nexport const USERID = \"userID\";\nexport const IS_COMPLETED = \"isCompleted\";\nexport const USERS = \"users\";\nexport const TASKS = \"tasks\";\nexport const TASK = \"task\";\nexport const LOGIN_TEXT = \"LOGIN\";\nexport const EDIT_TASK_TEXT = \"Edit Task\";\nexport const ADD_LOGOUT_TEXT = \"Logout\";\nexport const ADD_TASK_TEXT = \"Add Task\";\nexport const ADD_NEW_TASK_TEXT = \"New Task\";\nexport const NO_TASK_TEXT = \"You have no task\";\nexport const LATEST_CREATED_TASK_TEXT = \"Latest Created Tasks\";\n","import React, { useState, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport \"./index.css\";\nimport InputField from \"../../dumbComponents/customInputFields/index\";\nimport firebase from \"firebase\";\nimport {\n  TASKS,\n  TASK,\n  USERNAME,\n  EDIT_TASK_TEXT,\n  ADD_TASK_TEXT\n} from \"../../../constants/messages\";\n\nconst CustomizedInputs = props => {\n  const [taskName, setTaskName] = useState(\"\");\n  const [editTaskName, setEditTaskName] = useState(\"\");\n  const [id, setId] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n\n  useEffect(() => {\n    if (props.isEdit) {\n      setEditTaskName(props.taskItem);\n    }\n  }, []);\n\n  const handleChangeTaskName = e => {\n    setTaskName(e.target.value);\n\n    console.log(taskName);\n  };\n  const handleChangeId = e => {\n    setId(e.target.value);\n  };\n  const handleChangeEditTaskName = e => {\n    setEditTaskName(e.target.value);\n\n    console.log(editTaskName);\n  };\n\n  const handleChangeUsername = e => {\n    setUsername(e.target.value);\n  };\n\n  const handleSubmitEditTask = () => {\n    firebase\n      .database()\n      .ref(TASKS)\n      .orderByChild(TASK)\n      .equalTo(props.taskItem)\n      .once(\"value\", snapshot => {\n        snapshot.forEach(function(data) {\n          data.ref.child(TASK).set(editTaskName);\n        });\n      });\n  };\n\n  const handleSubmitTask = () => {\n    const taskObject = {\n      userID: localStorage.getItem(USERNAME),\n      task: taskName,\n      isCompleted: 0\n    };\n\n    let userRef = firebase.database().ref(TASKS);\n    let newUserRef = userRef.push();\n    newUserRef\n      .set(taskObject)\n      .then(resp => {\n        console.log(resp);\n        props.handleSubmit();\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <div className=\"input_container\" align=\"center\">\n      {!props.modal ? (\n        <>\n          {/* LOGIN INPUT */}\n          <InputField\n            type=\"text\"\n            label=\"Id\"\n            defaultValue={id}\n            onChange={e => handleChangeId(e)}\n            variant=\"filled\"\n          />\n          <InputField\n            type=\"text\"\n            label=\"Name\"\n            defaultValue={username}\n            onChange={e => handleChangeUsername(e)}\n            variant=\"filled\"\n          />\n          <Button\n            onClick={e => props.handleUserSubmit(id, username)}\n            variant=\"contained\"\n            className=\"submitButton\"\n            disabled={!id || !username}\n          >\n            {props.text}\n          </Button>\n        </>\n      ) : (\n        <>\n          {props.isEdit ? (\n            <div>\n              {/* EDIT TASK INPUT */}\n              <InputField\n                label=\"Task Name\"\n                type=\"text\"\n                defaultValue={props.taskItem}\n                onChange={e => handleChangeEditTaskName(e)}\n                variant=\"filled\"\n              />\n              <Button\n                onClick={handleSubmitEditTask}\n                variant=\"contained\"\n                className=\"submitButton\"\n                disabled={!editTaskName}\n              >\n                {EDIT_TASK_TEXT}\n              </Button>\n            </div>\n          ) : (\n            <div>\n              {/* ADD TASK INPUT */}\n              <InputField\n                label=\"Task Name\"\n                type=\"text\"\n                defaultValue={taskName}\n                onChange={e => handleChangeTaskName(e)}\n                variant=\"filled\"\n              />\n              <Button\n                onClick={handleSubmitTask}\n                variant=\"contained\"\n                className=\"submitButton\"\n                disabled={!taskName}\n              >\n                {ADD_TASK_TEXT}\n              </Button>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default CustomizedInputs;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CustomizedInputs from \"../../smartComponents/input\";\nimport { LOGIN_TEXT } from \"../../../constants/messages\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\"\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  }\n});\n\nconst Login = props => {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\">\n          {LOGIN_TEXT}\n        </Typography>\n        <CustomizedInputs\n          handleUserSubmit={props.handleUserSubmit}\n          modal={false}\n          text=\"submit\"\n        />\n        {props.errorLoggedIn && (\n          <span style={{ color: \"red\", fontSize: \"15px\" }}>\n            {props.errorMessage}\n          </span>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\nexport default Login;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport { useSpring, animated } from \"react-spring/web.cjs\"; // web.cjs is required for IE 11 support\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Input from \"../../smartComponents/input/index\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nimport { ADD_NEW_TASK_TEXT } from \"../../../constants/messages\";\nimport \"./index.css\";\n\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  button: {\n    backgroundColor: \"#5285ec\",\n    width: \"100%\"\n  }\n}));\n\nconst Fade = React.forwardRef(function Fade(props, ref) {\n  const { in: open, children, onEnter, onExited, ...other } = props;\n  const style = useSpring({\n    from: { opacity: 0 },\n    to: { opacity: open ? 1 : 0 },\n    onStart: () => {\n      if (open && onEnter) {\n        onEnter();\n      }\n    },\n    onRest: () => {\n      if (!open && onExited) {\n        onExited();\n      }\n    }\n  });\n\n  return (\n    <animated.div ref={ref} style={style} {...other}>\n      {children}\n    </animated.div>\n  );\n});\n\nFade.propTypes = {\n  children: PropTypes.element,\n  in: PropTypes.bool.isRequired,\n  onEnter: PropTypes.func,\n  onExited: PropTypes.func\n};\n\nconst Modals = props => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleSubmit = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      {!props.isEdit ? (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleOpen}\n          className={classes.button}\n          startIcon={<AddIcon />}\n        >\n          {ADD_NEW_TASK_TEXT}\n        </Button>\n      ) : (\n        <div onClick={handleOpen}>\n          <EditOutlinedIcon />\n        </div>\n      )}\n      <Modal\n        aria-labelledby=\"spring-modal-title\"\n        aria-describedby=\"spring-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500\n        }}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <Input\n              modal={true}\n              text=\"new Task\"\n              taskItem={props.taskItem}\n              handleSubmit={handleSubmit}\n              isEdit={props.isEdit}\n            />\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n};\nexport default Modals;\n","import React, { useState } from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\nimport Modals from \"../modal/index\";\nimport \"./index.css\";\n\nconst TaskList = props => {\n  const [checked, setChecked] = useState([]);\n\n  const handleToggle = c => () => {\n    const clickedCategory = checked.indexOf(c);\n    const all = [...checked];\n\n    if (clickedCategory === -1) {\n      all.push(c);\n      props.setCompleteTask(c, 1);\n    } else {\n      props.setCompleteTask(c, 0);\n\n      all.splice(clickedCategory, 1);\n    }\n    setChecked(all);\n  };\n\n  return (\n    <div className=\"task_list_container\">\n      <TableContainer component={Paper}>\n        <Table className=\"table_width\" aria-label=\"simple table\">\n          <TableBody>\n            {props.data.map(task => (\n              <TableRow key={task.task}>\n                <TableCell\n                  component=\"th\"\n                  style={{\n                    color: \"#5285ec\",\n                    fontWeight: \"400\",\n                    fontFamily: \"adobe-clean, sans-serif\",\n                    fontSize: \"16px\"\n                  }}\n                  scope=\"row\"\n                >\n                  <input\n                    onChange={handleToggle(task.task)}\n                    type=\"checkbox\"\n                    className=\"mr-2\"\n                  />\n                  {console.log(\"TaskLists: \" + task.isCompleted)}\n                  {task.isCompleted === 1 ? <del>{task.task}</del> : task.task}\n                </TableCell>\n                <TableCell align=\"right\">\n                  <Modals isEdit={true} taskItem={task.task} />\n                </TableCell>\n                <TableCell\n                  onClick={() => props.removeTask(task.task)}\n                  align=\"right\"\n                >\n                  <DeleteOutlinedIcon />\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\nexport default TaskList;\n","import React from \"react\";\nimport \"./index.css\";\nimport Modals from \"../../dumbComponents/modal/index\";\nimport { TASKS } from \"../../../constants/messages\";\n\nimport InputField from \"../../dumbComponents/customInputFields/index\";\nconst SearchTask = props => {\n  return (\n    <div className=\"search_task_container\">\n      <div>\n        <p\n          style={{\n            color: \"#808080\",\n            fontWeight: \"bold\",\n            fontSize: \"18px\",\n            paddingTop: \"10px\",\n            paddingBottom: \"20px\"\n          }}\n        >\n          {TASKS}\n        </p>\n      </div>\n      <div className=\"search_task_main_container\">\n        <div className=\"search_task_subcontainer\">\n          <div className=\"search_task_subcontainer_first\">\n            <InputField\n              className=\"search_task_input\"\n              type=\"text\"\n              label=\"Search by task name\"\n              defaultValue=\"\"\n              onChange={props.handleChange}\n              variant=\"filled\"\n            />\n          </div>\n          <div className=\"search_task_subcontainer_second\">\n            <Modals isEdit={false} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchTask;\n","import React from \"react\";\nimport { DonutMultiple, DonutElement, DonutLabel } from \"react-donut-component\";\n\nconst DonutChart = props => (\n  <DonutMultiple size=\"150px\">\n    <DonutElement color=\"grey\" name=\"\">\n      {props.totalTasks}\n    </DonutElement>\n    <DonutElement color=\"#5688ED\" name=\"\">\n      {props.totalTasks - props.totalTaskCompleted}}\n    </DonutElement>\n    <DonutLabel style={{ fontSize: \"9px\" }}>\n      {((props.totalTaskCompleted / props.totalTasks) * 100).toFixed(2)}%\n      completed Task\n    </DonutLabel>\n  </DonutMultiple>\n);\nexport default DonutChart;\n","import React from \"react\";\nimport \"./index.css\";\nimport Card from \"@material-ui/core/Card\";\nimport DonutChart from \"../donutchart/index\";\nimport { LATEST_CREATED_TASK_TEXT } from \"../../../constants/messages\";\nconst TaskDescription = props => {\n  return (\n    <div className=\"task_description_container\">\n      <Card align=\"left\" className=\"task_description_card1\">\n        <span style={{ color: \"grey\", fontSize: \"22px\" }}>Task Completed </span>\n        <br />\n        <span style={{ color: \"#5285EC\", fontSize: \"70px\" }}>\n          {props.totalTaskCompleted}\n          <span style={{ fontSize: \"25px\", color: \"grey\" }}>\n            /{props.totalTasks}\n          </span>\n        </span>\n      </Card>\n      <Card align=\"left\" className=\"task_description_card2\">\n        <span style={{ color: \"grey\", fontSize: \"22px\" }}>\n          {LATEST_CREATED_TASK_TEXT}\n        </span>\n        {props.recentTaskList.map(task => (\n          <div keys={task}>\n            {task.isCompleted ? (\n              <del>\n                <li style={{ color: \"grey\", fontSize: \"12px\" }}>{task.task}</li>\n              </del>\n            ) : (\n              <li\n                style={{ color: \"grey\", fontSize: \"14px\", paddingTop: \"5px\" }}\n              >\n                {task.task}\n              </li>\n            )}\n          </div>\n        ))}\n      </Card>\n      <Card className=\"task_description_card3\">\n        <DonutChart\n          totalTaskCompleted={props.totalTaskCompleted}\n          totalTasks={props.totalTasks}\n          align=\"center\"\n        />\n      </Card>\n    </div>\n  );\n};\nexport default TaskDescription;\n","import React, { useEffect, useState } from \"react\";\nimport TaskList from \"../../dumbComponents/TaskList/index\";\nimport SearchTask from \"../SearchTask/index\";\nimport firebase from \"firebase\";\nimport TaskDescription from \"../../dumbComponents/taskDescription/index\";\nimport {\n  TASKS,\n  TASK,\n  USERID,\n  USERNAME,\n  IS_COMPLETED\n} from \"../../../constants/messages\";\n\nconst TaskDetails = () => {\n  const [taskList, setTaskList] = useState([]);\n  const [recentTaskList, setRecentTaskList] = useState([]);\n  const [filterList, setFilterList] = useState([]);\n  const [totalTaskCompleted, setTotalTaskCompleted] = useState(0);\n  const [totalTasks, setTotalTasks] = useState(0);\n\n  useEffect(() => {\n    firebase\n      .database()\n      .ref(TASKS)\n      .orderByChild(USERID)\n      .equalTo(localStorage.getItem(USERNAME))\n      .on(\"value\", snapshot => {\n        setTotalTaskCompleted(0);\n        setTotalTasks(0);\n        let datas = [];\n        if (snapshot.exists()) {\n          snapshot.forEach(function(data) {\n            setTotalTasks(totalTasks => totalTasks + 1);\n            if (data.child(IS_COMPLETED).val() === 1) {\n              setTotalTaskCompleted(\n                totalTaskCompleted => totalTaskCompleted + 1\n              );\n            }\n            datas.push(data.val());\n          });\n          setTaskList(datas);\n          setFilterList(datas);\n        }\n      });\n  }, []);\n\n  useEffect(() => {\n    firebase\n      .database()\n      .ref(TASKS)\n      .orderByChild(USERID)\n      .equalTo(localStorage.getItem(USERNAME))\n      .limitToLast(3)\n      .on(\"value\", snapshot => {\n        let datas = [];\n        if (snapshot.exists()) {\n          snapshot.forEach(function(data) {\n            datas.push(data.val());\n          });\n          setRecentTaskList(datas);\n        }\n      });\n  }, []);\n\n  const removeTask = value => {\n    firebase\n      .database()\n      .ref(TASKS)\n      .orderByChild(TASK)\n      .equalTo(value)\n      .once(\"value\")\n      .then(function(snapshot) {\n        snapshot.forEach(function(child) {\n          child.ref.remove();\n        });\n      });\n  };\n\n  const setCompleteTask = (value, flag) => {\n    firebase\n      .database()\n      .ref(TASKS)\n      .orderByChild(TASK)\n      .equalTo(value)\n      .once(\"value\", snapshot => {\n        snapshot.forEach(function(data) {\n          data.ref.child(IS_COMPLETED).set(flag);\n        });\n      });\n  };\n\n  const searchTaskOnChange = e => {\n    const inputValue = e.target.value;\n\n    setFilterList(\n      taskList.filter(taskData =>\n        taskData.task.toUpperCase().includes(inputValue.toUpperCase())\n      )\n    );\n  };\n\n  return (\n    <div>\n      <TaskDescription\n        totalTasks={totalTasks}\n        totalTaskCompleted={totalTaskCompleted}\n        recentTaskList={recentTaskList}\n      />\n      <SearchTask handleChange={searchTaskOnChange} />\n      <TaskList\n        setCompleteTask={setCompleteTask}\n        data={filterList}\n        removeTask={removeTask}\n      />\n    </div>\n  );\n};\nexport default TaskDetails;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Modals from \"../modal/index\";\nimport { NO_TASK_TEXT } from \"../../../constants/messages\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    minWidth: 275,\n    marginTop: 100\n  }\n}));\n\nconst NoTask = () => {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography variant=\"h6\" component=\"h2\">\n          {NO_TASK_TEXT}\n        </Typography>\n        <Modals isEdit={false} />\n      </CardContent>\n    </Card>\n  );\n};\nexport default NoTask;\n","import \"./index.css\";\nimport TaskDetails from \"../../smartComponents/TaskDetails/index\";\nimport NoTask from \"../noTask/index\";\nconst Main = props => {\n  console.log(\"main: \" + props.isTaskAdded);\n  return <div>{props.isTaskAdded ? <TaskDetails /> : <NoTask />}</div>;\n};\n\nexport default Main;\n","import React from \"react\";\nimport \"./index.css\";\nimport Button from \"@material-ui/core/Button\";\nimport { ADD_LOGOUT_TEXT } from \"../../../constants/messages\";\n\nconst Header = props => {\n  return (\n    <div className=\"Header\">\n      <p className=\"para\">{props.username}</p>\n      <Button\n        onClick={props.logoutSubmit}\n        className=\"logout_btn\"\n        color=\"primary\"\n      >\n        {ADD_LOGOUT_TEXT}\n      </Button>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useEffect, useState } from \"react\";\nimport \"./index.css\";\nimport Main from \"../../dumbComponents/main/index\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport firebase from \"firebase\";\nimport Header from \"../../dumbComponents/header/index\";\nimport { TASKS, USERNAME, USERID } from \"../../../constants/messages\";\nconst LoadingComponent = props => {\n  const [Loading, isLoading] = useState(false);\n  const [TaskAdded, isTaskAdded] = useState(false);\n\n  useEffect(() => {\n    firebase\n      .database()\n      .ref(TASKS)\n      .orderByChild(USERID)\n      .equalTo(localStorage.getItem(USERNAME))\n      .once(\"value\", snapshot => {\n        setTimeout(() => {\n          isLoading(true);\n        }, 2000);\n        console.log(\"loading: \" + snapshot.exists());\n        if (snapshot.exists()) {\n          isTaskAdded(true);\n        }\n      });\n\n    firebase\n      .database()\n      .ref(TASKS)\n      .orderByChild(USERID)\n      .equalTo(localStorage.getItem(USERNAME))\n      .on(\"value\", snapshot => {\n        if (snapshot.exists()) {\n          isTaskAdded(true);\n        }\n      });\n  }, []);\n  return (\n    <div className=\"Loading\">\n      <Header logoutSubmit={props.logoutSubmit} username={props.username} />\n\n      <header className=\"Loading-header\">\n        {!Loading ? (\n          <div className=\"progress_bar\" align=\"center\">\n            <CircularProgress className=\"progress_barColor\" color=\"primary\" />\n          </div>\n        ) : (\n          <div className=\"progress_bar\" align=\"center\">\n            <Main isTaskAdded={TaskAdded} />\n          </div>\n        )}\n      </header>\n    </div>\n  );\n};\n\nexport default LoadingComponent;\n","import React, { useState, useEffect } from \"react\";\nimport Login from \"./dumbComponents/login/index\";\nimport Loading from \"./smartComponents/loading/index\";\nimport firebase from \"firebase\";\nimport {\n  INVALID_USERNAME,\n  INVALID_ID,\n  TOKEN,\n  USERNAME,\n  APIKEY,\n  USERS\n} from \"../constants/messages\";\n\nconst AppComponent = () => {\n  const [UserLoggedIn, IsUserLoggedIn] = useState(false);\n  const [errorLoggedIn, IsErrorLoggedIn] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n\n  useEffect(() => {\n    if (localStorage.getItem(TOKEN) !== null) {\n      IsUserLoggedIn(true);\n      setUsername(localStorage.getItem(USERNAME));\n    } else {\n      IsUserLoggedIn(false);\n    }\n  }, []);\n\n  const signIn = (id, username) => {\n    firebase\n      .database()\n      .ref(USERS)\n      .orderByChild(APIKEY)\n      .equalTo(id)\n      .once(\"value\")\n      .then(snapshot => {\n        if (snapshot.exists()) {\n          snapshot.forEach(function(data) {\n            if (\n              data\n                .child(USERNAME)\n                .val()\n                .toUpperCase() === username.toUpperCase()\n            ) {\n              setUsername(data.child(USERNAME).val());\n              IsErrorLoggedIn(false);\n              IsUserLoggedIn(true);\n              localStorage.setItem(TOKEN, data.child(TOKEN).val());\n              localStorage.setItem(USERNAME, data.child(USERNAME).val());\n            } else {\n              setErrorMessage(INVALID_USERNAME);\n              IsErrorLoggedIn(true);\n            }\n          });\n        } else {\n          IsErrorLoggedIn(true);\n          setErrorMessage(INVALID_ID);\n        }\n      });\n  };\n  const signOut = () => {\n    localStorage.removeItem(TOKEN);\n    localStorage.removeItem(USERNAME);\n    IsUserLoggedIn(false);\n  };\n  return (\n    <div className=\"AppComponent\">\n      {!UserLoggedIn ? (\n        <header className=\"App-header\">\n          <Login\n            errorLoggedIn={errorLoggedIn}\n            errorMessage={errorMessage}\n            handleUserSubmit={signIn}\n          />\n        </header>\n      ) : (\n        <Loading logoutSubmit={signOut} username={username} />\n      )}\n    </div>\n  );\n};\n\nexport default AppComponent;\n","export const firebaseConfig = {\n  apiKey: \"AIzaSyCnqT1TZ03PydLHtQWmgqeEm74EoqY_ewY\",\n  authDomain: \"tdcx-9c9e8.firebaseapp.com\",\n  databaseURL: \"https://tdcx-9c9e8-default-rtdb.firebaseio.com\",\n  projectId: \"tdcx-9c9e8\",\n  storageBucket: \"tdcx-9c9e8.appspot.com\",\n  messagingSenderId: \"180148505495\",\n  appId: \"1:180148505495:web:5ced8472e82d2a9f8812d2\",\n  measurementId: \"G-2FXTHSPLSE\"\n};\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport AppComponent from \"./components/AppComponent\";\nimport firebase from \"firebase/app\";\nimport { firebaseConfig } from \"./constants/apikey\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    if (!firebase.apps.length) {\n      firebase.initializeApp(firebaseConfig);\n    } else {\n      firebase.app();\n    }\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <AppComponent />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}