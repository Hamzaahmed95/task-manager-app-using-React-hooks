[{"/Users/tahmed/Desktop/tdcx/tdcx-assignment/src/index.js":"1","/Users/tahmed/Desktop/tdcx/tdcx-assignment/src/App.js":"2","/Users/tahmed/Desktop/tdcx/tdcx-assignment/src/reportWebVitals.js":"3","/Users/tahmed/Desktop/tdcx/tdcx-assignment/src/components/dumbComponents/login/index.js":"4","/Users/tahmed/Desktop/tdcx/tdcx-assignment/src/components/smartComponents/input/index.js":"5","/Users/tahmed/Desktop/tdcx/tdcx-assignment/src/components/dumbComponents/customInputFields/index.js":"6","/Users/tahmed/Desktop/tdcx/tdcx-assignment/src/components/dumbComponents/header/index.js":"7","/Users/tahmed/Desktop/tdcx/tdcx-assignment/src/components/dumbComponents/noTask/index.js":"8","/Users/tahmed/Desktop/tdcx/tdcx-assignment/src/components/dumbComponents/modal/index.js":"9","/Users/tahmed/Desktop/tdcx/tdcx-assignment/src/components/dumbComponents/main/index.js":"10","/Users/tahmed/Desktop/tdcx/tdcx-assignment/src/components/smartComponents/TaskDetails/index.js":"11","/Users/tahmed/Desktop/tdcx/tdcx-assignment/src/components/dumbComponents/TaskList/index.js":"12","/Users/tahmed/Desktop/tdcx/tdcx-assignment/src/components/smartComponents/SearchTask/index.js":"13","/Users/tahmed/Desktop/tdcx/tdcx-assignment/src/constants/apikey.js":"14","/Users/tahmed/Desktop/tdcx/tdcx-assignment/src/components/dumbComponents/loading/index.js":"15","/Users/tahmed/Desktop/tdcx/tdcx-assignment/src/components/AppComponent.js":"16","/Users/tahmed/Desktop/tdcx/tdcx-assignment/src/components/dumbComponents/taskDescription/index.js":"17"},{"size":500,"mtime":1611488972551,"results":"18","hashOfConfig":"19"},{"size":567,"mtime":1611586279787,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1611488972552,"results":"21","hashOfConfig":"19"},{"size":1096,"mtime":1611595673244,"results":"22","hashOfConfig":"19"},{"size":3817,"mtime":1611588007490,"results":"23","hashOfConfig":"19"},{"size":841,"mtime":1611491578663,"results":"24","hashOfConfig":"19"},{"size":364,"mtime":1611604523033,"results":"25","hashOfConfig":"19"},{"size":836,"mtime":1611530977225,"results":"26","hashOfConfig":"19"},{"size":3044,"mtime":1611607555923,"results":"27","hashOfConfig":"19"},{"size":296,"mtime":1611581329629,"results":"28","hashOfConfig":"19"},{"size":2080,"mtime":1611605998723,"results":"29","hashOfConfig":"19"},{"size":2730,"mtime":1611536216221,"results":"30","hashOfConfig":"19"},{"size":1002,"mtime":1611605128679,"results":"31","hashOfConfig":"19"},{"size":390,"mtime":1611522540183,"results":"32","hashOfConfig":"19"},{"size":1495,"mtime":1611604508726,"results":"33","hashOfConfig":"19"},{"size":2409,"mtime":1611604889317,"results":"34","hashOfConfig":"19"},{"size":527,"mtime":1611606234856,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"etefnt",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tahmed/Desktop/tdcx/tdcx-assignment/src/index.js",[],["73","74"],"/Users/tahmed/Desktop/tdcx/tdcx-assignment/src/App.js",[],"/Users/tahmed/Desktop/tdcx/tdcx-assignment/src/reportWebVitals.js",[],"/Users/tahmed/Desktop/tdcx/tdcx-assignment/src/components/dumbComponents/login/index.js",[],"/Users/tahmed/Desktop/tdcx/tdcx-assignment/src/components/smartComponents/input/index.js",["75"],"import React, { useState, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport \"./index.css\";\nimport InputField from \"../../dumbComponents/customInputFields/index\";\nimport firebase from \"firebase\";\n\nconst CustomizedInputs = props => {\n  const [taskName, setTaskName] = useState(\"\");\n  const [editTaskName, setEditTaskName] = useState(\"\");\n  const [id, setId] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n\n  useEffect(() => {\n    if (props.isEdit) {\n      setEditTaskName(props.taskItem);\n    }\n  }, []);\n\n  const handleChangeTaskName = e => {\n    setTaskName(e.target.value);\n\n    console.log(taskName);\n  };\n  const handleChangeId = e => {\n    setId(e.target.value);\n  };\n  const handleChangeEditTaskName = e => {\n    setEditTaskName(e.target.value);\n\n    console.log(editTaskName);\n  };\n\n  const handleChangeUsername = e => {\n    setUsername(e.target.value);\n  };\n\n  const handleSubmitEditTask = () => {\n    // const taskObject = {\n    //   userID: \"hamzaahmed95\",\n    //   task: editTaskName\n    // };\n\n    firebase\n      .database()\n      .ref(\"tasks\")\n      .orderByChild(\"task\")\n      .equalTo(props.taskItem)\n      .once(\"value\", snapshot => {\n        snapshot.forEach(function(data) {\n          data.ref.child(\"task\").set(editTaskName);\n        });\n      });\n  };\n\n  const handleSubmitTask = () => {\n    const taskObject = {\n      userID: \"hamzaahmed95\",\n      task: taskName,\n      isCompleted: 0\n    };\n\n    let userRef = firebase.database().ref(\"tasks\");\n    let newUserRef = userRef.push();\n    newUserRef\n      .set(taskObject)\n      .then(resp => {\n        console.log(resp);\n        props.handleSubmit();\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <div className=\"input_container\" align=\"center\">\n      {!props.modal ? (\n        <>\n          <InputField\n            type=\"text\"\n            label=\"Id\"\n            defaultValue={id}\n            onChange={e => handleChangeId(e)}\n            variant=\"filled\"\n            id=\"reddit-input\"\n          />\n          <InputField\n            type=\"text\"\n            label=\"Name\"\n            defaultValue={username}\n            onChange={e => handleChangeUsername(e)}\n            variant=\"filled\"\n            id=\"reddit-input\"\n          />\n          <Button\n            onClick={e => props.handleUserSubmit(id, username)}\n            variant=\"contained\"\n            className=\"submitButton\"\n            disabled={!id || !username}\n          >\n            {props.text}\n          </Button>\n        </>\n      ) : (\n        <>\n          {props.isEdit ? (\n            <div>\n              <InputField\n                label=\"Task Name\"\n                type=\"text\"\n                defaultValue={props.taskItem}\n                onChange={e => handleChangeEditTaskName(e)}\n                variant=\"filled\"\n                id=\"reddit-input\"\n              />\n              <Button\n                onClick={handleSubmitEditTask}\n                variant=\"contained\"\n                className=\"submitButton\"\n                disabled={!editTaskName}\n              >\n                Edit Task\n              </Button>\n            </div>\n          ) : (\n            <div>\n              <InputField\n                label=\"Task Name\"\n                type=\"text\"\n                defaultValue={taskName}\n                onChange={e => handleChangeTaskName(e)}\n                variant=\"filled\"\n                id=\"reddit-input\"\n              />\n              <Button\n                onClick={handleSubmitTask}\n                variant=\"contained\"\n                className=\"submitButton\"\n                disabled={!taskName}\n              >\n                Add Task\n              </Button>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default CustomizedInputs;\n","/Users/tahmed/Desktop/tdcx/tdcx-assignment/src/components/dumbComponents/customInputFields/index.js",[],"/Users/tahmed/Desktop/tdcx/tdcx-assignment/src/components/dumbComponents/header/index.js",[],"/Users/tahmed/Desktop/tdcx/tdcx-assignment/src/components/dumbComponents/noTask/index.js",[],"/Users/tahmed/Desktop/tdcx/tdcx-assignment/src/components/dumbComponents/modal/index.js",[],"/Users/tahmed/Desktop/tdcx/tdcx-assignment/src/components/dumbComponents/main/index.js",[],"/Users/tahmed/Desktop/tdcx/tdcx-assignment/src/components/smartComponents/TaskDetails/index.js",[],"/Users/tahmed/Desktop/tdcx/tdcx-assignment/src/components/dumbComponents/TaskList/index.js",["76","77","78","79"],"import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nimport Modals from \"../modal/index\";\nimport \"./index.css\";\n\nconst TaskList = props => {\n  const [checked, setChecked] = useState([]); // categories\n\n  const handleToggle = c => () => {\n    // return the first index or -1\n    const clickedCategory = checked.indexOf(c);\n\n    const all = [...checked];\n    console.log(\"clickedCategory: \" + clickedCategory);\n\n    if (clickedCategory === -1) {\n      all.push(c);\n      props.setCompleteTask(c, 1);\n      console.log(\"ahmedd: checked!!\" + c);\n    } else {\n      props.setCompleteTask(c, 0);\n      console.log(\"ahmedd: unchecked!!\" + c);\n      all.splice(clickedCategory, 1);\n    }\n\n    setChecked(all);\n  };\n\n  return (\n    <div className=\"task_list_container\">\n      <TableContainer component={Paper}>\n        <Table className=\"table_width\" aria-label=\"simple table\">\n          <TableBody>\n            {props.data.map(task => (\n              <TableRow key={task.task}>\n                <TableCell\n                  component=\"th\"\n                  style={{\n                    color: \"#5285ec\",\n                    fontWeight: \"400\",\n                    fontFamily: \"adobe-clean, sans-serif\",\n                    fontSize: \"16px\"\n                  }}\n                  scope=\"row\"\n                >\n                  <input\n                    onChange={handleToggle(task.task)}\n                    type=\"checkbox\"\n                    className=\"mr-2\"\n                  />\n                  {console.log(\"TaskLists: \" + task.isCompleted)}\n                  {task.isCompleted === 1 ? <del>{task.task}</del> : task.task}\n                </TableCell>\n                <TableCell align=\"right\">\n                  <Modals isEdit={true} taskItem={task.task} />\n                </TableCell>\n                <TableCell\n                  onClick={() => props.removeTask(task.task)}\n                  align=\"right\"\n                >\n                  <DeleteOutlinedIcon />\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\nexport default TaskList;\n","/Users/tahmed/Desktop/tdcx/tdcx-assignment/src/components/smartComponents/SearchTask/index.js",["80","81"],"/Users/tahmed/Desktop/tdcx/tdcx-assignment/src/constants/apikey.js",[],"/Users/tahmed/Desktop/tdcx/tdcx-assignment/src/components/dumbComponents/loading/index.js",[],"/Users/tahmed/Desktop/tdcx/tdcx-assignment/src/components/AppComponent.js",[],"/Users/tahmed/Desktop/tdcx/tdcx-assignment/src/components/dumbComponents/taskDescription/index.js",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":17,"column":6,"nodeType":"88","endLine":17,"endColumn":8,"suggestions":"89"},{"ruleId":"90","severity":1,"message":"91","line":2,"column":10,"nodeType":"92","messageId":"93","endLine":2,"endColumn":20},{"ruleId":"90","severity":1,"message":"94","line":7,"column":8,"nodeType":"92","messageId":"93","endLine":7,"endColumn":17},{"ruleId":"90","severity":1,"message":"95","line":10,"column":8,"nodeType":"92","messageId":"93","endLine":10,"endColumn":16},{"ruleId":"90","severity":1,"message":"96","line":12,"column":8,"nodeType":"92","messageId":"93","endLine":12,"endColumn":24},{"ruleId":"90","severity":1,"message":"97","line":3,"column":8,"nodeType":"92","messageId":"93","endLine":3,"endColumn":14},{"ruleId":"90","severity":1,"message":"98","line":8,"column":17,"nodeType":"92","messageId":"93","endLine":8,"endColumn":25},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.isEdit' and 'props.taskItem'. Either include them or remove the dependency array. If 'setEditTaskName' needs the current value of 'props.taskItem', you can also switch to useReducer instead of useState and read 'props.taskItem' in the reducer.","ArrayExpression",["101"],"no-unused-vars","'makeStyles' is defined but never used.","Identifier","unusedVar","'TableHead' is defined but never used.","'Checkbox' is defined but never used.","'EditOutlinedIcon' is defined but never used.","'Button' is defined but never used.","'setValue' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},"Update the dependencies array to be: [props.isEdit, props.taskItem]",{"range":"104","text":"105"},[545,547],"[props.isEdit, props.taskItem]"]